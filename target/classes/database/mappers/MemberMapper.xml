<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.food.sbproject1.member.MemberMapper">
  	
  	
  	<sql id="getMember">
  			id like concat('%', #{search}, '%') or
  			name like concat('%', #{search}, '%') or
  			email like concat('%', #{search}, '%')
  	</sql>
  	
 	<select id="getMemberId" resultType="MemberVO" parameterType="MemberVO">
  	select * from member where id= #{id}
  	</select>
	
  
  	<insert id="setMemberJoin" parameterType="MemberVO">
  		insert into member(id,pw,name,age,email, level)
		values(#{id}, #{pw}, #{name}, #{age}, #{email}, '3')
  	</insert>
 	
 	<insert id="setMemberFileInsert" parameterType="MemberFileVO">
		insert into memberfile(id,fileName,oriName)
		values(#{id}, #{fileName}, #{oriName})
	</insert>
  	
  	<select id="getOne" parameterType="MemberVO" resultType="MemberVO">
    	select * from member where id=#{id}
    </select>

	<select id="getMemberLogin" resultMap="memberLoginResult" parameterType="MemberVO">
		select M.id, M.name, M.age, M.email, M.level, MF.fileName, MF.oriName
		from member M
		left join memberfile MF 
		on M.id = MF.id
		where M.id= #{id} and M.pw= #{pw}
	</select>
	<resultMap type="MemberVO" id="memberLoginResult">
		<id column="id" property="id"/>
		<result column="num" property="num"/>
		<result column="name" property="name"/>
		<result column="pw" property="pw"/>
		<result column="pw2" property="pw2"/>
		<result column="email" property="email"/>
		<result column="age" property="age"/>
		<result column="level" property="level"/>
		
		<association property="memberFileVO" javaType="MemberFileVO">
			<id column="filenum" property="filenum"/>
			<result column="fileName" property="fileName"/>
			<result column="oriName" property="oriName"/>
		</association>	
		
	
	</resultMap>	
	
  	<update id="setMemberUpdate" parameterType="MemberVO">
  		update member set age= #{age}, email= #{email} where id= #{id}
  	</update>
  	
  	<delete id="setMemberDelete" parameterType="MemberVO">
		delete from member where id= #{id} 
  	</delete>
  	
 	<select id="getMemberCount" parameterType="Pager" resultType="long">
  		select count(num) from member where
  		<include refid="getMember"></include>
  	</select>
  	
  	<select id="getListPage" resultType="MemberVO" parameterType="pager">
  		select * from member where
  		<include refid="getMember"></include>
  		order by level desc limit #{startRow}, 10
  	</select>
  	
  	<update id="levelUpdate" parameterType="MemberVO">
  		update member set level=#{level}-1 where id=#{id}
  	</update>
  	
  </mapper>